function [lh_proj_data, rh_proj_data] = CBIG_RF_projectMNI2fsaverage(input, interp, lh_map, rh_map)

% Usage: [lh_proj_data, rh_proj_data] = CBIG_RF_ProjectMNI2fsaverage(input, interp, lh_map, rh_map)
%
% This function projects an input volume to fsaverage.
%
% -----------
% DEFINITIONS
% -----------
% Input arguments:
%     - input :
%               absolute path to input data in a volumetric atlas space
%     - interp:
%               interpolation ('linear' or 'nearest')
%               (default: 'linear')
%     - lh_map:
%               absolute path to average mapping generated by RF approach for left hemisphere
%               the mapping file should contain a variable: ras
%               default is RF-ANTs MNI152-to-fsaverage mapping: 
%                 $CBIG_CODE_DIR/stable_projects/registration/Wu2017_RegistrationFusion/bin/
%                 final_warps_FS5.3/lh.avgMapping_allSub_RF_ANTs_MNI152_orig_to_fsaverage.mat
%               for RF-ANTs Colin27-to-fsaverage mapping use: 
%                 $CBIG_CODE_DIR/stable_projects/registration/Wu2017_RegistrationFusion/bin/
%                 final_warps_FS5.3/lh.avgMapping_allSub_RF_ANTs_Colin27_orig_to_fsaverage.mat
%               or for RF-M3Z mappings: change the 'RF_ANTs' in the file name to 'RF_M3Z'
%                 and the 'orig' to 'norm'
%     - rh_map:
%               absolute path to average mapping generated by RF approach for right hemisphere
%               the mapping file should contain a variable: ras
%               default is RF-ANTs MNI152-to-fsaverage mapping: 
%                 $CBIG_CODE_DIR/stable_projects/registration/Wu2017_RegistrationFusion/bin/
%                 final_warps_FS5.3/rh.avgMapping_allSub_RF_ANTs_MNI152_orig_to_fsaverage.mat
%               for RF-ANTs Colin27-to-fsaverage mapping use: 
%                 $CBIG_CODE_DIR/stable_projects/registration/Wu2017_RegistrationFusion/bin/
%                 final_warps_FS5.3/rh.avgMapping_allSub_RF_ANTs_Colin27_orig_to_fsaverage.mat
%               or for RF-M3Z mappings: change the 'RF_ANTs' in the file name to 'RF_M3Z'
%                 and the 'orig' to 'norm'
%
% Outputs:
%     - lh_proj_data:
%                     projected results in left hemisphere (1x163842 vector)
%     - rh_proj_data:
%                     projected results in right hemisphere (1x163842 vector)
%
% -------------
% EXAMPLE USAGE
% -------------
% >> [lh_proj_data, rh_proj_data] = CBIG_RF_projectMNI2fsaverage('MNI_probMap_ants.central_sulc.nii.gz');
% This projects the MNI probabilistic map of central sulcus to fsaverage.
% Note that you should be in the same directory as this script to run this command.
%
% If you have downloaded the whole repository, you can visualise the results by:
% >> CBIG_DrawSurfaceMaps(lh_proj_data, rh_proj_data, 'fsaverage', 'inflated', 0, 1);
%
% To visualise/check the demo volume (which should be the same as the results), use:
% >> lh_demo = MRIread('lh.MNI_probMap_ants.central_sulc.demo.nii.gz');
% >> rh_demo = MRIread('rh.MNI_probMap_ants.central_sulc.demo.nii.gz');
% >> CBIG_DrawSurfaceMaps(lh_demo, rh_demo, 'fsaverage', 'inflated', 0, 1);
%
% Otherwise, you can save the results and load them in freeview (as overlay). For example:
% >> data = MRIread('MNI_probMap_ants.central_sulc.nii.gz');
% >> data.vol = lh_proj_data;
% >> MRIwrite(data, 'lh.MNI2fsaverage_probMap_ants.central_sulc.nii.gz');
% Then call freeview in terminal:
% freeview -f $FREESURFER_HOME/subjects/fsaverage/surf/lh.inflated:overlay=lh.MNI2fsaverage_probMap_ants.central_sulc.nii.gz
%
% Written by Wu Jianxiao and CBIG under MIT license: https://github.com/ThomasYeoLab/CBIG/blob/master/LICENSE.md

% Function usage
if nargin < 1
    disp('usage: [lh_proj_data, rh_proj_data] = CBIG_RF_projectMNI2fsaverage(input, interp, lh_map, rh_map)');
    return
end

% Default parameters
dir_uti = fileparts(fileparts(mfilename('fullpath')));
if nargin < 2
    interp = 'linear';
end
if nargin < 3
    lh_map = fullfile(dir_uti, 'final_warps_FS5.3', 'lh.avgMapping_allSub_RF_ANTs_MNI152_orig_to_fsaverage.mat');
end
if nargin < 4
    rh_map = fullfile(dir_uti, 'final_warps_FS5.3', 'rh.avgMapping_allSub_RF_ANTs_MNI152_orig_to_fsaverage.mat');
end

%Check FreeSurfer directory & version
fs_dir = getenv('FREESURFER_HOME');
if isempty(fs_dir) == 1
    disp('FreeSurfer directory cannot be found. You can manually set the path to FreeSurfer using the environmental variable FREESURFER_HOME');
    return
else
    addpath(fs_dir);
    fs_stamp_file = fopen(fullfile(fs_dir, 'build-stamp.txt'), 'r');
    fs_stamp = fgetl(fs_stamp_file);
    stamp_start = regexp(fs_stamp, 'v\d.\d');
    disp(['Using FreeSurfer version ' fs_stamp(stamp_start+1:stamp_start+3)]);
    fclose(fs_stamp_file);
end

% Set up
input = MRIread(input);
[x1, x2, x3] = ndgrid(1:size(input.vol, 1), 1:size(input.vol, 2), 1:size(input.vol, 3));

% Loop through each hemisphere
data_dim = size(input.vol, 4);
for hemis = {'lh', 'rh'}
    hemi = hemis{1};
    
    % Get mapping to the corresponding hemisphere
    if(strcmp(hemi, 'lh'))
        load(lh_map); 
    else
        load(rh_map);
    end
    
    % Set up parameters for fsaverage surface
    num_vertices = 163842; %number of vertex in fsaverage
    proj_data = zeros(data_dim, num_vertices);
    
    % Convert RAS correspondence to voxel coordinates and matrix coordinates
    vox_coor = convertRas2Vox(ras(:, 1:num_vertices), input.vox2ras);
    mat_coor = [vox_coor(2, :)+1 ; vox_coor(1, :)+1; vox_coor(3, :)+1];
    
    % Project the input data to fsaverage
    for i = 1:data_dim
        proj_data(i, :) = interpn(x1, x2, x3, squeeze(input.vol(:, :, :, i)), mat_coor(1, :)', mat_coor(2, :)', mat_coor(3, :)', interp)';
    end
    
    % Assign output
    if(strcmp(hemi, 'lh'))
        lh_proj_data = proj_data;
    else
        rh_proj_data = proj_data;
    end
end

rmpath(fs_dir);
end

function vox = convertRas2Vox(ras, vox2ras)

vox = inv(vox2ras(1:3, 1:3)) * (ras - repmat(vox2ras(1:3, 4), 1, size(ras, 2)));

end
